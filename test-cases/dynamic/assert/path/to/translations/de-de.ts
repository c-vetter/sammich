// generated by sammich ðŸŽ¯

// this is the default locale, its data type will be expected on the extension locales

const translations = {
	staticStrings: `Translations for "de-de"`,
	functions: (hello: string, world: string) => `Say ${hello} to ${world}`,
	nest: {
		keys: {
			as: {
				deep: {
					as: {
						you: {
							like: `No magic, just your structure`
						},
					},
				},
			},
		},
	},
}

//

// look but don't touch. the following makes the i18n objects readonly
const _translations : Translations = translations
export { _translations as translations }

export type Translations = DeepReadonly<typeof translations>

// there are more sophisticated versions, but this is good enough
type DeepReadonly<T> = (
	T extends (...args: infer A) => infer R
	? (...args: A) => DeepReadonly<R>
	: { readonly [K in keyof T]: DeepReadonly<T[K]> }
)
